@{
    var loadingId = ViewData["LoadingId"]?.ToString() ?? "loading";
    var loadingText = ViewData["LoadingText"]?.ToString() ?? "Loading...";
    var loadingType = ViewData["LoadingType"]?.ToString() ?? "spinner"; // spinner, dots, pulse
    var loadingSize = ViewData["LoadingSize"]?.ToString() ?? "normal"; // small, normal, large
}

<!-- Loading Spinner -->
@if (loadingType == "spinner")
{
    <div id="@loadingId" class="loading-spinner" style="display: none;">
        <div class="spinner-container">
            <div class="spinner-border text-teal @(loadingSize.Equals("small") ? "spinner-border-sm" : loadingSize.Equals("large") ? "spinner-border-lg" : "")" role="status">
                <span class="visually-hidden">@loadingText</span>
            </div>
            @if (!loadingSize.Equals("small"))
            {
                <p class="mt-2 text-teal">@loadingText</p>
            }
        </div>
    </div>
}

<!-- Loading Dots -->
@if (loadingType.Equals("dots"))
{
    <div id="@loadingId" class="loading-dots" style="display: none;">
        <div class="dots-container">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>
        <p class="mt-2 text-teal">@loadingText</p>
    </div>
}

<!-- Loading Pulse -->
@if (loadingType.Equals("pulse"))
{
    <div id="@loadingId" class="loading-pulse" style="display: none;">
        <div class="pulse-container">
            <div class="pulse-circle"></div>
        </div>
        <p class="mt-2 text-teal">@loadingText</p>
    </div>
}

<style>
    .loading-spinner, .loading-dots, .loading-pulse {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        padding: 1rem;
    }

    .spinner-container {
        text-align: center;
    }

    /* Dots Animation */
    .dots-container {
        display: flex;
        gap: 0.5rem;
    }

    .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background-color: #009688;
        animation: dot-pulse 1.4s ease-in-out infinite both;
    }

    .dot:nth-child(1) { animation-delay: -0.32s; }
    .dot:nth-child(2) { animation-delay: -0.16s; }
    .dot:nth-child(3) { animation-delay: 0s; }

    @@keyframes dot-pulse {
        0%, 80%, 100% {
            transform: scale(0);
            opacity: 0.5;
        }
        40% {
            transform: scale(1);
            opacity: 1;
        }
    }

    /* Pulse Animation */
    .pulse-container {
        position: relative;
    }

    .pulse-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #009688;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(0, 150, 136, 0.7);
        }
        70% {
            transform: scale(1);
            box-shadow: 0 0 0 10px rgba(0, 150, 136, 0);
        }
        100% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(0, 150, 136, 0);
        }
    }

    .text-teal {
        color: #009688 !important;
    }
</style>

<script>
    // Loading utility functions
    window.LoadingUtils = {
        show(loadingId = 'loading') {
            const loadingElement = document.getElementById(loadingId);
            if (loadingElement) {
                loadingElement.style.display = 'flex';
            }
        },
        
        hide(loadingId = 'loading') {
            const loadingElement = document.getElementById(loadingId);
            if (loadingElement) {
                loadingElement.style.display = 'none';
            }
        },
        
        showWithText(loadingId, text) {
            const loadingElement = document.getElementById(loadingId);
            if (loadingElement) {
                const textElement = loadingElement.querySelector('p');
                if (textElement) {
                    textElement.textContent = text;
                }
                loadingElement.style.display = 'flex';
            }
        }
    };
</script> 